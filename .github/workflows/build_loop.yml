name: 4. Build Loop
run-name: Build Loop (${{ github.ref_name }})

on:
  workflow_dispatch:
  schedule:
    - cron: "33 9 * * 3"
    - cron: "33 7 1 * *"

env:
  UPSTREAM_REPO: LoopKit/LoopWorkspace
  UPSTREAM_BRANCH: ${{ github.ref_name }}
  TARGET_BRANCH: ${{ github.ref_name }}
  ALIVE_BRANCH_MAIN: alive-main
  ALIVE_BRANCH_DEV: alive-dev

jobs:
  check_alive_and_permissions:
    runs-on: ubuntu-latest
    name: Check alive branch and permissions
    permissions:
      contents: write
    outputs:
      WORKFLOW_PERMISSION: ${{ steps.set_permission.outputs.has_permission }}
    steps:
      - name: Check workflow permission
        id: set_permission
        run: |
          echo "âœ… Assuming GH_PAT is fine-grained or has workflow permissions"
          echo "has_permission=true" >> $GITHUB_OUTPUT

  build:
    needs: check_alive_and_permissions
    runs-on: macos-15
    name: Build Loop App
    steps:
      - name: Select Xcode
        run: sudo xcode-select --switch /Applications/Xcode_16.4.app/Contents/Developer

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: recursive
          ref: ${{ env.TARGET_BRANCH }}

      - name: Install dependencies
        run: bundle install

      - name: Build & Archive
        run: bundle exec fastlane build_loop
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Upload to TestFlight
        run: bundle exec fastlane release
        env:
          TEAMID: ${{ secrets.TEAMID }}
          GH_PAT: ${{ secrets.GH_PAT }}
          FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts
            buildlog
